; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((Proc 0)) (((pay))))
 (declare-fun w_0 () Int)
(declare-fun oracle_1 () Int)
(declare-fun t_oracle_0_0 () Int)
(declare-fun aw_0_2 () Int)
(declare-fun aw_1_2 () Int)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun w_1 () Int)
(declare-fun xa_0 () Int)
(declare-fun oracle_0 () Int)
(declare-fun xn_0 () Int)
(declare-fun oracle_2 () Int)
(declare-fun t_aw_1_0_2 () Int)
(declare-fun aw_2_2 () Int)
(declare-fun t_aw_1_0_1 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun t_aw_1_0_0 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun pay_amount_1 () Int)
(declare-fun xa_1 () Int)
(declare-fun xn_1 () Int)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(declare-fun oracle_3 () Int)
(declare-fun t_aw_2_0_2 () Int)
(declare-fun aw_3_2 () Int)
(declare-fun t_aw_2_0_1 () Int)
(declare-fun aw_3_1 () Int)
(declare-fun t_aw_2_0_0 () Int)
(declare-fun aw_3_0 () Int)
(declare-fun t_w_2_0 () Int)
(declare-fun w_3 () Int)
(declare-fun pay_amount_2 () Int)
(declare-fun xa_2 () Int)
(declare-fun xn_2 () Int)
(declare-fun block_num_3 () Int)
(declare-fun oracle_4 () Int)
(declare-fun t_aw_3_0_2 () Int)
(declare-fun aw_4_2 () Int)
(declare-fun t_aw_3_0_1 () Int)
(declare-fun aw_4_1 () Int)
(declare-fun t_aw_3_0_0 () Int)
(declare-fun aw_4_0 () Int)
(declare-fun t_w_3_0 () Int)
(declare-fun w_4 () Int)
(declare-fun pay_amount_3 () Int)
(declare-fun xa_3 () Int)
(declare-fun xn_3 () Int)
(declare-fun block_num_4 () Int)
(assert
 (>= w_0 0))
(assert
 (let (($x135 (= t_oracle_0_0 oracle_1)))
 (let (($x130 (= aw_1_2 aw_0_2)))
 (let (($x129 (= aw_1_1 aw_0_1)))
 (let (($x128 (= aw_1_0 aw_0_0)))
 (let (($x131 (and $x128 $x129 $x130)))
 (let (($x127 (= w_1 w_0)))
 (let (($x134 (= t_oracle_0_0 xa_0)))
 (let (($x138 (ite (not (= xn_0 0)) (and $x127 $x131 (= oracle_0 oracle_1)) (and $x134 true (and $x127 $x131 $x135)))))
 (and (and (>= xa_0 0) (<= xa_0 2) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0) (>= aw_0_2 0)) $x138))))))))))
(assert
 (let (($x159 (= oracle_1 oracle_2)))
 (let (($x188 (= aw_2_2 t_aw_1_0_2)))
 (let (($x187 (= aw_2_1 t_aw_1_0_1)))
 (let (($x186 (= aw_2_0 t_aw_1_0_0)))
 (let (($x185 (= w_2 t_w_1_0)))
 (let (($x190 (and $x185 (and $x186 $x187 $x188) $x159)))
 (let (($x181 (= t_aw_1_0_2 aw_1_2)))
 (let (($x178 (= xa_1 2)))
 (let (($x176 (= t_aw_1_0_1 aw_1_1)))
 (let (($x173 (= xa_1 1)))
 (let (($x170 (= t_aw_1_0_0 aw_1_0)))
 (let (($x167 (= xa_1 0)))
 (let (($x183 (and (ite $x167 (= t_aw_1_0_0 (+ aw_1_0 pay_amount_1)) $x170) (ite $x173 (= t_aw_1_0_1 (+ aw_1_1 pay_amount_1)) $x176) (ite $x178 (= t_aw_1_0_2 (+ aw_1_2 pay_amount_1)) $x181))))
 (let (($x157 (= aw_2_2 aw_1_2)))
 (let (($x156 (= aw_2_1 aw_1_1)))
 (let (($x155 (= aw_2_0 aw_1_0)))
 (let (($x154 (= w_2 w_1)))
 (let (($x160 (and $x154 (and $x155 $x156 $x157) $x159)))
 (let (($x192 (ite (not (>= pay_amount_1 0)) $x160 (and (and (= t_w_1_0 (- w_1 pay_amount_1)) $x183) true $x190))))
 (let (($x195 (ite (not (<= pay_amount_1 w_1)) $x160 (and (and $x192 true $x190)))))
 (let (($x149 (>= aw_1_2 0)))
 (let (($x148 (>= aw_1_1 0)))
 (let (($x147 (>= aw_1_0 0)))
 (let (($x150 (and $x147 $x148 $x149)))
 (and (and (>= xa_1 0) (<= xa_1 2) (>= xn_1 0)) $x150 (>= block_num_2 block_num_1) (ite (not (= xn_1 0)) $x160 (and $x195))))))))))))))))))))))))))))
(assert
 (let (($x244 (= oracle_2 oracle_3)))
 (let (($x272 (= aw_3_2 t_aw_2_0_2)))
 (let (($x271 (= aw_3_1 t_aw_2_0_1)))
 (let (($x270 (= aw_3_0 t_aw_2_0_0)))
 (let (($x269 (= w_3 t_w_2_0)))
 (let (($x274 (and $x269 (and $x270 $x271 $x272) $x244)))
 (let (($x265 (= t_aw_2_0_2 aw_2_2)))
 (let (($x262 (= xa_2 2)))
 (let (($x260 (= t_aw_2_0_1 aw_2_1)))
 (let (($x257 (= xa_2 1)))
 (let (($x255 (= t_aw_2_0_0 aw_2_0)))
 (let (($x252 (= xa_2 0)))
 (let (($x267 (and (ite $x252 (= t_aw_2_0_0 (+ aw_2_0 pay_amount_2)) $x255) (ite $x257 (= t_aw_2_0_1 (+ aw_2_1 pay_amount_2)) $x260) (ite $x262 (= t_aw_2_0_2 (+ aw_2_2 pay_amount_2)) $x265))))
 (let (($x242 (= aw_3_2 aw_2_2)))
 (let (($x241 (= aw_3_1 aw_2_1)))
 (let (($x240 (= aw_3_0 aw_2_0)))
 (let (($x239 (= w_3 w_2)))
 (let (($x245 (and $x239 (and $x240 $x241 $x242) $x244)))
 (let (($x276 (ite (not (>= pay_amount_2 0)) $x245 (and (and (= t_w_2_0 (- w_2 pay_amount_2)) $x267) true $x274))))
 (let (($x279 (ite (not (<= pay_amount_2 w_2)) $x245 (and (and $x276 true $x274)))))
 (let (($x234 (>= aw_2_2 0)))
 (let (($x233 (>= aw_2_1 0)))
 (let (($x232 (>= aw_2_0 0)))
 (let (($x235 (and $x232 $x233 $x234)))
 (and (and (>= xa_2 0) (<= xa_2 2) (>= xn_2 0)) $x235 (>= block_num_3 block_num_2) (ite (not (= xn_2 0)) $x245 (and $x279))))))))))))))))))))))))))))
(assert
 (let (($x327 (= oracle_3 oracle_4)))
 (let (($x355 (= aw_4_2 t_aw_3_0_2)))
 (let (($x354 (= aw_4_1 t_aw_3_0_1)))
 (let (($x353 (= aw_4_0 t_aw_3_0_0)))
 (let (($x352 (= w_4 t_w_3_0)))
 (let (($x357 (and $x352 (and $x353 $x354 $x355) $x327)))
 (let (($x348 (= t_aw_3_0_2 aw_3_2)))
 (let (($x345 (= xa_3 2)))
 (let (($x343 (= t_aw_3_0_1 aw_3_1)))
 (let (($x340 (= xa_3 1)))
 (let (($x338 (= t_aw_3_0_0 aw_3_0)))
 (let (($x335 (= xa_3 0)))
 (let (($x350 (and (ite $x335 (= t_aw_3_0_0 (+ aw_3_0 pay_amount_3)) $x338) (ite $x340 (= t_aw_3_0_1 (+ aw_3_1 pay_amount_3)) $x343) (ite $x345 (= t_aw_3_0_2 (+ aw_3_2 pay_amount_3)) $x348))))
 (let (($x325 (= aw_4_2 aw_3_2)))
 (let (($x324 (= aw_4_1 aw_3_1)))
 (let (($x323 (= aw_4_0 aw_3_0)))
 (let (($x322 (= w_4 w_3)))
 (let (($x328 (and $x322 (and $x323 $x324 $x325) $x327)))
 (let (($x359 (ite (not (>= pay_amount_3 0)) $x328 (and (and (= t_w_3_0 (- w_3 pay_amount_3)) $x350) true $x357))))
 (let (($x362 (ite (not (<= pay_amount_3 w_3)) $x328 (and (and $x359 true $x357)))))
 (let (($x317 (>= aw_3_2 0)))
 (let (($x316 (>= aw_3_1 0)))
 (let (($x315 (>= aw_3_0 0)))
 (let (($x318 (and $x315 $x316 $x317)))
 (and (and (>= xa_3 0) (<= xa_3 2) (>= xn_3 0)) $x318 (>= block_num_4 block_num_3) (ite (not (= xn_3 0)) $x328 (and $x362))))))))))))))))))))))))))))
(assert
 (let (($x535 (exists ((xa_q Int) )(let (($x457 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (awq0_2 Int) (t_wq0_0 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (t_awq0_0_2 Int) (block_num_q0 Int) (pay_amount0_q Int) (oracleq0 Int) (t_oracleq0_0 Int) )(let (($x425 (and (or (and (distinct xa_q 0) true) (not (= awq0_0 (+ aw_2_0 w_2)))) (or (and (distinct xa_q 1) true) (not (= awq0_1 (+ aw_2_1 w_2)))) (or (and (distinct xa_q 2) true) (not (= awq0_2 (+ aw_2_2 w_2)))))))
 (let (($x565 (= oracle_2 oracleq0)))
 (let (($x489 (= awq0_2 t_awq0_0_2)))
 (let (($x490 (= awq0_1 t_awq0_0_1)))
 (let (($x491 (= awq0_0 t_awq0_0_0)))
 (let (($x492 (and $x491 $x490 $x489)))
 (let (($x493 (= wq0 t_wq0_0)))
 (let (($x566 (and $x493 $x492 $x565)))
 (let (($x533 (and (ite (= xa_q 0) (= t_awq0_0_0 (+ aw_2_0 pay_amount0_q)) (= t_awq0_0_0 aw_2_0)) (ite (= xa_q 1) (= t_awq0_0_1 (+ aw_2_1 pay_amount0_q)) (= t_awq0_0_1 aw_2_1)) (ite (= xa_q 2) (= t_awq0_0_2 (+ aw_2_2 pay_amount0_q)) (= t_awq0_0_2 aw_2_2)))))
 (let (($x589 (and (= wq0 w_2) (and (= awq0_0 aw_2_0) (= awq0_1 aw_2_1) (= awq0_2 aw_2_2)) $x565)))
 (let (($x519 (not (>= pay_amount0_q 0))))
 (let (($x511 (and (ite $x519 $x589 (and (and (= t_wq0_0 (- w_2 pay_amount0_q)) $x533) true $x566)) true $x566)))
 (let (($x528 (not (= xn_q0 0))))
 (let (($x234 (>= aw_2_2 0)))
 (let (($x233 (>= aw_2_1 0)))
 (let (($x232 (>= aw_2_0 0)))
 (let (($x235 (and $x232 $x233 $x234)))
 (let (($x427 (and (>= xa_q 0) (<= xa_q 2) (>= xn_q0 0))))
 (let (($x447 (and $x427 $x235 (>= block_num_q0 block_num_2) (ite $x528 $x589 (and (ite (not (<= pay_amount0_q w_2)) $x589 (and $x511)))))))
 (or (not $x447) $x425)))))))))))))))))))))
 ))
 (let (($x432 (<= xa_q 2)))
 (let (($x433 (>= xa_q 0)))
 (let (($x434 (and $x433 $x432)))
 (and $x434 true $x457))))))
 ))
 (and $x535)))
(check-sat)
