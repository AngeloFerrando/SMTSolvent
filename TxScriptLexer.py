# Generated from TxScript.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62")
        buf.write("\u0179\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3")
        buf.write("\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3")
        buf.write("\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3")
        buf.write("&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3")
        buf.write(")\3)\3)\3)\3)\3)\3*\3*\7*\u0116\n*\f*\16*\u0119\13*\3")
        buf.write("+\3+\7+\u011d\n+\f+\16+\u0120\13+\3,\5,\u0123\n,\3,\3")
        buf.write(",\5,\u0127\n,\3,\3,\6,\u012b\n,\r,\16,\u012c\5,\u012f")
        buf.write("\n,\3-\3-\3-\6-\u0134\n-\r-\16-\u0135\3-\3-\3-\6-\u013b")
        buf.write("\n-\r-\16-\u013c\5-\u013f\n-\3.\3.\3.\3.\3.\3.\3.\3.\3")
        buf.write(".\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u0154\n.\3/\6/\u0157")
        buf.write("\n/\r/\16/\u0158\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3")
        buf.write("\62\3\62\7\62\u0165\n\62\f\62\16\62\u0168\13\62\3\62\3")
        buf.write("\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\7\63\u0173\n\63")
        buf.write("\f\63\16\63\u0176\13\63\3\63\3\63\3\u0166\2\64\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\2a\2c\61e\62\3\2\b\5\2\60\60aac|\7\2\60\60\62")
        buf.write(";C\\aac|\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"")
        buf.write("\4\2\f\f\17\17\2\u0185\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3g")
        buf.write("\3\2\2\2\5p\3\2\2\2\7r\3\2\2\2\tt\3\2\2\2\13x\3\2\2\2")
        buf.write("\r}\3\2\2\2\17\u0084\3\2\2\2\21\u008c\3\2\2\2\23\u008e")
        buf.write("\3\2\2\2\25\u0091\3\2\2\2\27\u0093\3\2\2\2\31\u009e\3")
        buf.write("\2\2\2\33\u00a7\3\2\2\2\35\u00af\3\2\2\2\37\u00bb\3\2")
        buf.write("\2\2!\u00c0\3\2\2\2#\u00c8\3\2\2\2%\u00cb\3\2\2\2\'\u00d0")
        buf.write("\3\2\2\2)\u00d2\3\2\2\2+\u00d4\3\2\2\2-\u00d6\3\2\2\2")
        buf.write("/\u00d8\3\2\2\2\61\u00da\3\2\2\2\63\u00dc\3\2\2\2\65\u00de")
        buf.write("\3\2\2\2\67\u00e0\3\2\2\29\u00e2\3\2\2\2;\u00e5\3\2\2")
        buf.write("\2=\u00e8\3\2\2\2?\u00ea\3\2\2\2A\u00ec\3\2\2\2C\u00ef")
        buf.write("\3\2\2\2E\u00f2\3\2\2\2G\u00f6\3\2\2\2I\u00f9\3\2\2\2")
        buf.write("K\u00fd\3\2\2\2M\u0102\3\2\2\2O\u0107\3\2\2\2Q\u010d\3")
        buf.write("\2\2\2S\u0113\3\2\2\2U\u011a\3\2\2\2W\u012e\3\2\2\2Y\u013e")
        buf.write("\3\2\2\2[\u0153\3\2\2\2]\u0156\3\2\2\2_\u015c\3\2\2\2")
        buf.write("a\u015e\3\2\2\2c\u0160\3\2\2\2e\u016e\3\2\2\2gh\7e\2\2")
        buf.write("hi\7q\2\2ij\7p\2\2jk\7v\2\2kl\7t\2\2lm\7c\2\2mn\7e\2\2")
        buf.write("no\7v\2\2o\4\3\2\2\2pq\7}\2\2q\6\3\2\2\2rs\7\177\2\2s")
        buf.write("\b\3\2\2\2tu\7k\2\2uv\7p\2\2vw\7v\2\2w\n\3\2\2\2xy\7d")
        buf.write("\2\2yz\7q\2\2z{\7q\2\2{|\7n\2\2|\f\3\2\2\2}~\7u\2\2~\177")
        buf.write("\7v\2\2\177\u0080\7t\2\2\u0080\u0081\7k\2\2\u0081\u0082")
        buf.write("\7p\2\2\u0082\u0083\7i\2\2\u0083\16\3\2\2\2\u0084\u0085")
        buf.write("\7c\2\2\u0085\u0086\7f\2\2\u0086\u0087\7f\2\2\u0087\u0088")
        buf.write("\7t\2\2\u0088\u0089\7g\2\2\u0089\u008a\7u\2\2\u008a\u008b")
        buf.write("\7u\2\2\u008b\20\3\2\2\2\u008c\u008d\7*\2\2\u008d\22\3")
        buf.write("\2\2\2\u008e\u008f\7/\2\2\u008f\u0090\7@\2\2\u0090\24")
        buf.write("\3\2\2\2\u0091\u0092\7+\2\2\u0092\26\3\2\2\2\u0093\u0094")
        buf.write("\7e\2\2\u0094\u0095\7q\2\2\u0095\u0096\7p\2\2\u0096\u0097")
        buf.write("\7u\2\2\u0097\u0098\7v\2\2\u0098\u0099\7t\2\2\u0099\u009a")
        buf.write("\7c\2\2\u009a\u009b\7k\2\2\u009b\u009c\7p\2\2\u009c\u009d")
        buf.write("\7v\2\2\u009d\30\3\2\2\2\u009e\u009f\7h\2\2\u009f\u00a0")
        buf.write("\7w\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7e\2\2\u00a2\u00a3")
        buf.write("\7v\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6")
        buf.write("\7p\2\2\u00a6\32\3\2\2\2\u00a7\u00a8\7r\2\2\u00a8\u00a9")
        buf.write("\7c\2\2\u00a9\u00aa\7{\2\2\u00aa\u00ab\7c\2\2\u00ab\u00ac")
        buf.write("\7d\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae\7g\2\2\u00ae\34")
        buf.write("\3\2\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7q\2\2\u00b1\u00b2")
        buf.write("\7p\2\2\u00b2\u00b3\7u\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5")
        buf.write("\7t\2\2\u00b5\u00b6\7w\2\2\u00b6\u00b7\7e\2\2\u00b7\u00b8")
        buf.write("\7v\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba\7t\2\2\u00ba\36")
        buf.write("\3\2\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd\7m\2\2\u00bd\u00be")
        buf.write("\7k\2\2\u00be\u00bf\7r\2\2\u00bf \3\2\2\2\u00c0\u00c1")
        buf.write("\7t\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7s\2\2\u00c3\u00c4")
        buf.write("\7w\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7")
        buf.write("\7g\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca")
        buf.write("\7h\2\2\u00ca$\3\2\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd")
        buf.write("\7n\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf\7g\2\2\u00cf&\3")
        buf.write("\2\2\2\u00d0\u00d1\7?\2\2\u00d1(\3\2\2\2\u00d2\u00d3\7")
        buf.write("]\2\2\u00d3*\3\2\2\2\u00d4\u00d5\7_\2\2\u00d5,\3\2\2\2")
        buf.write("\u00d6\u00d7\7#\2\2\u00d7.\3\2\2\2\u00d8\u00d9\7=\2\2")
        buf.write("\u00d9\60\3\2\2\2\u00da\u00db\7,\2\2\u00db\62\3\2\2\2")
        buf.write("\u00dc\u00dd\7\61\2\2\u00dd\64\3\2\2\2\u00de\u00df\7-")
        buf.write("\2\2\u00df\66\3\2\2\2\u00e0\u00e1\7/\2\2\u00e18\3\2\2")
        buf.write("\2\u00e2\u00e3\7?\2\2\u00e3\u00e4\7?\2\2\u00e4:\3\2\2")
        buf.write("\2\u00e5\u00e6\7#\2\2\u00e6\u00e7\7?\2\2\u00e7<\3\2\2")
        buf.write("\2\u00e8\u00e9\7>\2\2\u00e9>\3\2\2\2\u00ea\u00eb\7@\2")
        buf.write("\2\u00eb@\3\2\2\2\u00ec\u00ed\7>\2\2\u00ed\u00ee\7?\2")
        buf.write("\2\u00eeB\3\2\2\2\u00ef\u00f0\7@\2\2\u00f0\u00f1\7?\2")
        buf.write("\2\u00f1D\3\2\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7p\2")
        buf.write("\2\u00f4\u00f5\7f\2\2\u00f5F\3\2\2\2\u00f6\u00f7\7(\2")
        buf.write("\2\u00f7\u00f8\7(\2\2\u00f8H\3\2\2\2\u00f9\u00fa\7p\2")
        buf.write("\2\u00fa\u00fb\7q\2\2\u00fb\u00fc\7v\2\2\u00fcJ\3\2\2")
        buf.write("\2\u00fd\u00fe\7v\2\2\u00fe\u00ff\7t\2\2\u00ff\u0100\7")
        buf.write("w\2\2\u0100\u0101\7g\2\2\u0101L\3\2\2\2\u0102\u0103\7")
        buf.write("V\2\2\u0103\u0104\7t\2\2\u0104\u0105\7w\2\2\u0105\u0106")
        buf.write("\7g\2\2\u0106N\3\2\2\2\u0107\u0108\7h\2\2\u0108\u0109")
        buf.write("\7c\2\2\u0109\u010a\7n\2\2\u010a\u010b\7u\2\2\u010b\u010c")
        buf.write("\7g\2\2\u010cP\3\2\2\2\u010d\u010e\7H\2\2\u010e\u010f")
        buf.write("\7c\2\2\u010f\u0110\7n\2\2\u0110\u0111\7u\2\2\u0111\u0112")
        buf.write("\7g\2\2\u0112R\3\2\2\2\u0113\u0117\t\2\2\2\u0114\u0116")
        buf.write("\t\3\2\2\u0115\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117")
        buf.write("\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118T\3\2\2\2\u0119")
        buf.write("\u0117\3\2\2\2\u011a\u011e\t\4\2\2\u011b\u011d\t\5\2\2")
        buf.write("\u011c\u011b\3\2\2\2\u011d\u0120\3\2\2\2\u011e\u011c\3")
        buf.write("\2\2\2\u011e\u011f\3\2\2\2\u011fV\3\2\2\2\u0120\u011e")
        buf.write("\3\2\2\2\u0121\u0123\7/\2\2\u0122\u0121\3\2\2\2\u0122")
        buf.write("\u0123\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u012f\5_\60\2")
        buf.write("\u0125\u0127\7/\2\2\u0126\u0125\3\2\2\2\u0126\u0127\3")
        buf.write("\2\2\2\u0127\u0128\3\2\2\2\u0128\u012a\5a\61\2\u0129\u012b")
        buf.write("\5_\60\2\u012a\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c")
        buf.write("\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012f\3\2\2\2")
        buf.write("\u012e\u0122\3\2\2\2\u012e\u0126\3\2\2\2\u012fX\3\2\2")
        buf.write("\2\u0130\u0131\5W,\2\u0131\u0133\7\60\2\2\u0132\u0134")
        buf.write("\5_\60\2\u0133\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135")
        buf.write("\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u013f\3\2\2\2")
        buf.write("\u0137\u0138\5W,\2\u0138\u013a\7\60\2\2\u0139\u013b\5")
        buf.write("_\60\2\u013a\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013a")
        buf.write("\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013f\3\2\2\2\u013e")
        buf.write("\u0130\3\2\2\2\u013e\u0137\3\2\2\2\u013fZ\3\2\2\2\u0140")
        buf.write("\u0141\7k\2\2\u0141\u0142\7p\2\2\u0142\u0154\7v\2\2\u0143")
        buf.write("\u0144\7h\2\2\u0144\u0145\7n\2\2\u0145\u0146\7q\2\2\u0146")
        buf.write("\u0147\7c\2\2\u0147\u0154\7v\2\2\u0148\u0149\7d\2\2\u0149")
        buf.write("\u014a\7q\2\2\u014a\u014b\7q\2\2\u014b\u0154\7n\2\2\u014c")
        buf.write("\u014d\7c\2\2\u014d\u014e\7f\2\2\u014e\u014f\7f\2\2\u014f")
        buf.write("\u0150\7t\2\2\u0150\u0151\7g\2\2\u0151\u0152\7u\2\2\u0152")
        buf.write("\u0154\7u\2\2\u0153\u0140\3\2\2\2\u0153\u0143\3\2\2\2")
        buf.write("\u0153\u0148\3\2\2\2\u0153\u014c\3\2\2\2\u0154\\\3\2\2")
        buf.write("\2\u0155\u0157\t\6\2\2\u0156\u0155\3\2\2\2\u0157\u0158")
        buf.write("\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159")
        buf.write("\u015a\3\2\2\2\u015a\u015b\b/\2\2\u015b^\3\2\2\2\u015c")
        buf.write("\u015d\4\62;\2\u015d`\3\2\2\2\u015e\u015f\4\63;\2\u015f")
        buf.write("b\3\2\2\2\u0160\u0161\7\61\2\2\u0161\u0162\7,\2\2\u0162")
        buf.write("\u0166\3\2\2\2\u0163\u0165\13\2\2\2\u0164\u0163\3\2\2")
        buf.write("\2\u0165\u0168\3\2\2\2\u0166\u0167\3\2\2\2\u0166\u0164")
        buf.write("\3\2\2\2\u0167\u0169\3\2\2\2\u0168\u0166\3\2\2\2\u0169")
        buf.write("\u016a\7,\2\2\u016a\u016b\7\61\2\2\u016b\u016c\3\2\2\2")
        buf.write("\u016c\u016d\b\62\2\2\u016dd\3\2\2\2\u016e\u016f\7\61")
        buf.write("\2\2\u016f\u0170\7\61\2\2\u0170\u0174\3\2\2\2\u0171\u0173")
        buf.write("\n\7\2\2\u0172\u0171\3\2\2\2\u0173\u0176\3\2\2\2\u0174")
        buf.write("\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0177\3\2\2\2")
        buf.write("\u0176\u0174\3\2\2\2\u0177\u0178\b\63\2\2\u0178f\3\2\2")
        buf.write("\2\20\2\u0117\u011e\u0122\u0126\u012c\u012e\u0135\u013c")
        buf.write("\u013e\u0153\u0158\u0166\u0174\3\2\3\2")
        return buf.getvalue()


class TxScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    LABEL = 41
    LABELUPPER = 42
    NUMBER = 43
    REAL = 44
    TYPE = 45
    WS = 46
    COMMENT = 47
    LINE_COMMENT = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'contract'", "'{'", "'}'", "'int'", "'bool'", "'string'", "'address'", 
            "'('", "'->'", "')'", "'constraint'", "'function'", "'payable'", 
            "'constructor'", "'skip'", "'require'", "'if'", "'else'", "'='", 
            "'['", "']'", "'!'", "';'", "'*'", "'/'", "'+'", "'-'", "'=='", 
            "'!='", "'<'", "'>'", "'<='", "'>='", "'and'", "'&&'", "'not'", 
            "'true'", "'True'", "'false'", "'False'" ]

    symbolicNames = [ "<INVALID>",
            "LABEL", "LABELUPPER", "NUMBER", "REAL", "TYPE", "WS", "COMMENT", 
            "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "LABEL", "LABELUPPER", "NUMBER", "REAL", 
                  "TYPE", "WS", "DIGIT", "DIGIT_NOT_ZERO", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "TxScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


