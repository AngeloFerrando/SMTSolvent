; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((Proc 0)) (((join) (win) (Bet))))
 (declare-fun w_0 () Int)
(declare-fun state_1 () Int)
(declare-fun t_state_0_0 () Int)
(declare-fun par2_1 () Int)
(declare-fun par2_0 () Int)
(declare-fun par1_1 () Int)
(declare-fun t_par1_0_0 () Int)
(declare-fun deadline_1 () Int)
(declare-fun t_deadline_0_0 () Int)
(declare-fun oracle_1 () Int)
(declare-fun t_oracle_0_0 () Int)
(declare-fun aw_0_2 () Int)
(declare-fun aw_1_2 () Int)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun t_w_0_0 () Int)
(declare-fun w_1 () Int)
(declare-fun xn_0 () Int)
(declare-fun xa_0 () Int)
(declare-fun state_2 () Int)
(declare-fun t_state_1_0 () Int)
(declare-fun par2_2 () Int)
(declare-fun par1_2 () Int)
(declare-fun deadline_2 () Int)
(declare-fun oracle_2 () Int)
(declare-fun t_aw_1_0_2 () Int)
(declare-fun aw_2_2 () Int)
(declare-fun t_aw_1_0_1 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun t_aw_1_0_0 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun win_winner_1 () Int)
(declare-fun xn_1 () Int)
(declare-fun t_par2_1_0 () Int)
(declare-fun xa_1 () Int)
(declare-fun f_1 () Proc)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(assert
 (= w_0 0))
(assert
 (let (($x176 (= t_state_0_0 state_1)))
 (let (($x175 (= par2_0 par2_1)))
 (let (($x174 (= t_par1_0_0 par1_1)))
 (let (($x173 (= t_deadline_0_0 deadline_1)))
 (let (($x172 (= t_oracle_0_0 oracle_1)))
 (let (($x170 (= aw_1_2 aw_0_2)))
 (let (($x169 (= aw_1_1 aw_0_1)))
 (let (($x168 (= aw_1_0 aw_0_0)))
 (let (($x167 (= w_1 t_w_0_0)))
 (let (($x178 (and (and (= xn_0 1) (and true (and true (and true true)))) true (and $x167 (and $x168 $x169 $x170) $x172 $x173 $x174 $x175 $x176))))
 (and (and (>= xa_0 0) (<= xa_0 2) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0) (>= aw_0_2 0)) (and (= t_w_0_0 (+ w_0 xn_0)) $x178)))))))))))))
(assert
 (let (($x218 (= t_state_1_0 state_2)))
 (let (($x207 (= par2_1 par2_2)))
 (let (($x206 (= par1_1 par1_2)))
 (let (($x205 (= deadline_1 deadline_2)))
 (let (($x204 (= oracle_1 oracle_2)))
 (let (($x264 (= aw_2_2 t_aw_1_0_2)))
 (let (($x263 (= aw_2_1 t_aw_1_0_1)))
 (let (($x262 (= aw_2_0 t_aw_1_0_0)))
 (let (($x216 (= w_2 t_w_1_0)))
 (let (($x266 (and $x216 (and $x262 $x263 $x264) $x204 $x205 $x206 $x207 $x218)))
 (let (($x258 (= t_aw_1_0_2 aw_1_2)))
 (let (($x255 (= win_winner_1 2)))
 (let (($x253 (= t_aw_1_0_1 aw_1_1)))
 (let (($x250 (= win_winner_1 1)))
 (let (($x248 (= t_aw_1_0_0 aw_1_0)))
 (let (($x245 (= win_winner_1 0)))
 (let (($x260 (and (ite $x245 (= t_aw_1_0_0 (+ aw_1_0 w_1)) $x248) (ite $x250 (= t_aw_1_0_1 (+ aw_1_1 w_1)) $x253) (ite $x255 (= t_aw_1_0_2 (+ aw_1_2 w_1)) $x258))))
 (let (($x208 (= state_1 state_2)))
 (let (($x202 (= aw_2_2 aw_1_2)))
 (let (($x201 (= aw_2_1 aw_1_1)))
 (let (($x200 (= aw_2_0 aw_1_0)))
 (let (($x203 (and $x200 $x201 $x202)))
 (let (($x199 (= w_2 w_1)))
 (let (($x209 (and $x199 $x203 $x204 $x205 $x206 $x207 $x208)))
 (let (($x241 (>= w_1 0)))
 (let (($x242 (not $x241)))
 (let (($x268 (ite $x242 $x209 (and (and (= t_w_1_0 (- w_1 w_1)) $x260) true $x266))))
 (let (($x271 (ite (not (or (= win_winner_1 par1_1) (= win_winner_1 par2_1))) $x209 (and (and $x268 true $x266)))))
 (let (($x236 (= t_state_1_0 2)))
 (let (($x234 (= state_1 1)))
 (let (($x235 (not $x234)))
 (let (($x277 (ite (not (= xn_1 0)) $x209 (and (ite $x235 $x209 (and (and (and $x236 $x271) true $x266)))))))
 (let (($x217 (= t_par2_1_0 par2_2)))
 (let (($x219 (and $x216 $x203 $x204 $x205 $x206 $x217 $x218)))
 (let (($x222 (ite (not (and (distinct xa_1 par1_1) true)) $x209 (and (and (= t_par2_1_0 xa_1) true $x219)))))
 (let (($x210 (= t_state_1_0 1)))
 (let (($x226 (and $x210 (ite (not (= xn_1 2)) $x209 (and (and $x222 true $x219))))))
 (let (($x197 (= state_1 0)))
 (let (($x198 (not $x197)))
 (let (($x231 (and (= t_w_1_0 (+ w_1 xn_1)) (and (ite $x198 $x209 (and (and $x226 true $x219)))))))
 (let (($x194 (= f_1 join)))
 (let (($x191 (>= aw_1_2 0)))
 (let (($x190 (>= aw_1_1 0)))
 (let (($x189 (>= aw_1_0 0)))
 (let (($x192 (and $x189 $x190 $x191)))
 (and (and (>= xa_1 0) (<= xa_1 2) (>= xn_1 0)) $x192 (>= block_num_2 block_num_1) (ite $x194 $x231 $x277))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let (($x745 (exists ((xa_q Int) )(let (($x738 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (awq0_2 Int) (t_wq0_0 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (t_awq0_0_2 Int) (win_winner0_q Int) (oracleq0 Int) (t_oracleq0_0 Int) (deadlineq0 Int) (t_deadlineq0_0 Int) (par1q0 Int) (t_par1q0_0 Int) (par2q0 Int) (t_par2q0_0 Int) (stateq0 Int) (t_stateq0_0 Int) (xn_q1 Int) (f_q1 Proc) (wq1 Int) (awq1_0 Int) (awq1_1 Int) (awq1_2 Int) (t_wq1_0 Int) (t_awq1_0_0 Int) (t_awq1_0_1 Int) (t_awq1_0_2 Int) (win_winner1_q Int) (oracleq1 Int) (t_oracleq1_0 Int) (deadlineq1 Int) (t_deadlineq1_0 Int) (par1q1 Int) (t_par1q1_0 Int) (par2q1 Int) (t_par2q1_0 Int) (stateq1 Int) (t_stateq1_0 Int) )(let (($x599 (and (or (and (distinct par2_2 0) true) (not (>= (- awq1_0 aw_2_0) 2))) (or (and (distinct par2_2 1) true) (not (>= (- awq1_1 aw_2_1) 2))) (or (and (distinct par2_2 2) true) (not (>= (- awq1_2 aw_2_2) 2))))))
 (let (($x603 (and (or (and (distinct par1_2 0) true) (not (>= (- awq1_0 aw_2_0) 2))) (or (and (distinct par1_2 1) true) (not (>= (- awq1_1 aw_2_1) 2))) (or (and (distinct par1_2 2) true) (not (>= (- awq1_2 aw_2_2) 2))))))
 (let (($x604 (or $x603 $x599)))
 (let (($x468 (= t_stateq1_0 stateq1)))
 (let (($x671 (= par2q0 par2q1)))
 (let (($x672 (= par1q0 par1q1)))
 (let (($x673 (= deadlineq0 deadlineq1)))
 (let (($x674 (= oracleq0 oracleq1)))
 (let (($x473 (= awq1_2 t_awq1_0_2)))
 (let (($x476 (and (= awq1_0 t_awq1_0_0) (= awq1_1 t_awq1_0_1) $x473)))
 (let (($x477 (= wq1 t_wq1_0)))
 (let (($x675 (and $x477 $x476 $x674 $x673 $x672 $x671 $x468)))
 (let (($x688 (and (ite (= win_winner1_q 0) (= t_awq1_0_0 (+ awq0_0 wq0)) (= t_awq1_0_0 awq0_0)) (ite (= win_winner1_q 1) (= t_awq1_0_1 (+ awq0_1 wq0)) (= t_awq1_0_1 awq0_1)) (ite (= win_winner1_q 2) (= t_awq1_0_2 (+ awq0_2 wq0)) (= t_awq1_0_2 awq0_2)))))
 (let (($x697 (and (= awq1_0 awq0_0) (= awq1_1 awq0_1) (= awq1_2 awq0_2))))
 (let (($x699 (and (= wq1 wq0) $x697 $x674 $x673 $x672 $x671 (= stateq0 stateq1))))
 (let (($x702 (ite (not (>= wq0 0)) $x699 (and (and (= t_wq1_0 (- wq0 wq0)) $x688) true $x675))))
 (let (($x709 (ite (not (or (= win_winner1_q par1q0) (= win_winner1_q par2q0))) $x699 (and (and $x702 true $x675)))))
 (let (($x510 (= t_stateq1_0 2)))
 (let (($x715 (ite (not (= stateq0 1)) $x699 (and (and (and $x510 $x709) true $x675)))))
 (let (($x517 (not (= xn_q1 0))))
 (let (($x519 (= t_par2q1_0 par2q1)))
 (let (($x718 (and $x477 $x697 $x674 $x673 $x672 $x519 $x468)))
 (let (($x545 (ite (not (and (distinct xa_q par1q0) true)) $x699 (and (and (= t_par2q1_0 xa_q) true $x718)))))
 (let (($x528 (not (= xn_q1 2))))
 (let (($x530 (= t_stateq1_0 1)))
 (let (($x531 (and (and $x530 (ite $x528 $x699 (and (and $x545 true $x718)))) true $x718)))
 (let (($x535 (and (= t_wq1_0 (+ wq0 xn_q1)) (and (ite (not (= stateq0 0)) $x699 (and $x531))))))
 (let (($x539 (= f_q1 join)))
 (let (($x538 (ite $x539 $x535 (ite $x517 $x699 (and $x715)))))
 (let (($x804 (>= block_num_2 block_num_2)))
 (let (($x739 (>= awq0_2 0)))
 (let (($x742 (and (>= awq0_0 0) (>= awq0_1 0) $x739)))
 (let (($x541 (>= xn_q1 0)))
 (let (($x540 (<= xa_q 2)))
 (let (($x357 (>= xa_q 0)))
 (let (($x358 (and $x357 $x540 $x541)))
 (let (($x746 (= t_stateq0_0 stateq0)))
 (let (($x955 (= par2_2 par2q0)))
 (let (($x956 (= par1_2 par1q0)))
 (let (($x957 (= deadline_2 deadlineq0)))
 (let (($x958 (= oracle_2 oracleq0)))
 (let (($x754 (and (= awq0_0 t_awq0_0_0) (= awq0_1 t_awq0_0_1) (= awq0_2 t_awq0_0_2))))
 (let (($x755 (= wq0 t_wq0_0)))
 (let (($x959 (and $x755 $x754 $x958 $x957 $x956 $x955 $x746)))
 (let (($x969 (and (ite (= win_winner0_q 0) (= t_awq0_0_0 (+ aw_2_0 w_2)) (= t_awq0_0_0 aw_2_0)) (ite (= win_winner0_q 1) (= t_awq0_0_1 (+ aw_2_1 w_2)) (= t_awq0_0_1 aw_2_1)) (ite (= win_winner0_q 2) (= t_awq0_0_2 (+ aw_2_2 w_2)) (= t_awq0_0_2 aw_2_2)))))
 (let (($x977 (and (= awq0_0 aw_2_0) (= awq0_1 aw_2_1) (= awq0_2 aw_2_2))))
 (let (($x979 (and (= wq0 w_2) $x977 $x958 $x957 $x956 $x955 (= state_2 stateq0))))
 (let (($x398 (>= w_2 0)))
 (let (($x399 (not $x398)))
 (let (($x980 (ite $x399 $x979 (and (and (= t_wq0_0 (- w_2 w_2)) $x969) true $x959))))
 (let (($x987 (ite (not (or (= win_winner0_q par1_2) (= win_winner0_q par2_2))) $x979 (and (and $x980 true $x959)))))
 (let (($x788 (= t_stateq0_0 2)))
 (let (($x445 (= state_2 1)))
 (let (($x392 (not $x445)))
 (let (($x795 (not (= xn_q0 0))))
 (let (($x993 (ite $x795 $x979 (and (ite $x392 $x979 (and (and (and $x788 $x987) true $x959)))))))
 (let (($x797 (= t_par2q0_0 par2q0)))
 (let (($x994 (and $x755 $x977 $x958 $x957 $x956 $x797 $x746)))
 (let (($x835 (ite (not (and (distinct xa_q par1_2) true)) $x979 (and (and (= t_par2q0_0 xa_q) true $x994)))))
 (let (($x806 (not (= xn_q0 2))))
 (let (($x808 (= t_stateq0_0 1)))
 (let (($x660 (and (and $x808 (ite $x806 $x979 (and (and $x835 true $x994)))) true $x994)))
 (let (($x811 (= state_2 0)))
 (let (($x812 (not $x811)))
 (let (($x817 (= f_q0 join)))
 (let (($x830 (ite $x817 (and (= t_wq0_0 (+ w_2 xn_q0)) (and (ite $x812 $x979 (and $x660)))) $x993)))
 (let (($x802 (>= aw_2_2 0)))
 (let (($x801 (>= aw_2_1 0)))
 (let (($x800 (>= aw_2_0 0)))
 (let (($x803 (and $x800 $x801 $x802)))
 (let (($x377 (and $x357 $x540 (>= xn_q0 0))))
 (or (not (and $x377 $x803 $x804 $x830)) (not (and $x358 $x742 $x804 $x538)) $x604)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x445 (= state_2 1)))
 (let (($x352 (<= xa_q 2)))
 (let (($x353 (>= xa_q 0)))
 (let (($x354 (and $x353 $x352)))
 (and $x354 $x445 $x738)))))))
 ))
 (and $x745)))
(check-sat)
