; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((Proc 0)) (((pay))))
 (declare-fun w_0 () Int)
(declare-fun oracle_1 () Int)
(declare-fun t_oracle_0_0 () Int)
(declare-fun aw_0_2 () Int)
(declare-fun aw_1_2 () Int)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun w_1 () Int)
(declare-fun oracle_0 () Int)
(declare-fun xn_0 () Int)
(declare-fun xa_0 () Int)
(declare-fun oracle_2 () Int)
(declare-fun t_aw_1_0_2 () Int)
(declare-fun aw_2_2 () Int)
(declare-fun t_aw_1_0_1 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun t_aw_1_0_0 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun pay_amount_1 () Int)
(declare-fun xa_1 () Int)
(declare-fun xn_1 () Int)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(assert
 (>= w_0 0))
(assert
 (let (($x160 (= t_oracle_0_0 oracle_1)))
 (let (($x156 (= aw_1_2 aw_0_2)))
 (let (($x155 (= aw_1_1 aw_0_1)))
 (let (($x154 (= aw_1_0 aw_0_0)))
 (let (($x157 (and $x154 $x155 $x156)))
 (let (($x153 (= w_1 w_0)))
 (let (($x163 (ite (not (= xn_0 0)) (and $x153 $x157 (= oracle_0 oracle_1)) (and true true (and $x153 $x157 $x160)))))
 (and (and (>= xa_0 0) (<= xa_0 2) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0) (>= aw_0_2 0)) $x163)))))))))
(assert
 (let (($x184 (= oracle_1 oracle_2)))
 (let (($x213 (= aw_2_2 t_aw_1_0_2)))
 (let (($x212 (= aw_2_1 t_aw_1_0_1)))
 (let (($x211 (= aw_2_0 t_aw_1_0_0)))
 (let (($x210 (= w_2 t_w_1_0)))
 (let (($x215 (and $x210 (and $x211 $x212 $x213) $x184)))
 (let (($x206 (= t_aw_1_0_2 aw_1_2)))
 (let (($x203 (= xa_1 2)))
 (let (($x201 (= t_aw_1_0_1 aw_1_1)))
 (let (($x198 (= xa_1 1)))
 (let (($x195 (= t_aw_1_0_0 aw_1_0)))
 (let (($x192 (= xa_1 0)))
 (let (($x208 (and (ite $x192 (= t_aw_1_0_0 (+ aw_1_0 pay_amount_1)) $x195) (ite $x198 (= t_aw_1_0_1 (+ aw_1_1 pay_amount_1)) $x201) (ite $x203 (= t_aw_1_0_2 (+ aw_1_2 pay_amount_1)) $x206))))
 (let (($x182 (= aw_2_2 aw_1_2)))
 (let (($x181 (= aw_2_1 aw_1_1)))
 (let (($x180 (= aw_2_0 aw_1_0)))
 (let (($x179 (= w_2 w_1)))
 (let (($x185 (and $x179 (and $x180 $x181 $x182) $x184)))
 (let (($x217 (ite (not (>= pay_amount_1 0)) $x185 (and (and (= t_w_1_0 (- w_1 pay_amount_1)) $x208) true $x215))))
 (let (($x220 (ite (not (<= pay_amount_1 w_1)) $x185 (and (and $x217 true $x215)))))
 (let (($x174 (>= aw_1_2 0)))
 (let (($x173 (>= aw_1_1 0)))
 (let (($x172 (>= aw_1_0 0)))
 (let (($x175 (and $x172 $x173 $x174)))
 (and (and (>= xa_1 0) (<= xa_1 2) (>= xn_1 0)) $x175 (>= block_num_2 block_num_1) (ite (not (= xn_1 0)) $x185 (and $x220))))))))))))))))))))))))))))
(assert
 (let (($x444 (exists ((xa_q Int) )(let (($x442 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (awq0_2 Int) (t_wq0_0 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (t_awq0_0_2 Int) (block_num_q0 Int) (pay_amount0_q Int) (oracleq0 Int) (t_oracleq0_0 Int) (xn_q1 Int) (f_q1 Proc) (wq1 Int) (awq1_0 Int) (awq1_1 Int) (awq1_2 Int) (t_wq1_0 Int) (t_awq1_0_0 Int) (t_awq1_0_1 Int) (t_awq1_0_2 Int) (block_num_q1 Int) (pay_amount1_q Int) (oracleq1 Int) (t_oracleq1_0 Int) (xn_q2 Int) (f_q2 Proc) (wq2 Int) (awq2_0 Int) (awq2_1 Int) (awq2_2 Int) (t_wq2_0 Int) (t_awq2_0_0 Int) (t_awq2_0_1 Int) (t_awq2_0_2 Int) (block_num_q2 Int) (pay_amount2_q Int) (oracleq2 Int) (t_oracleq2_0 Int) (xn_q3 Int) (f_q3 Proc) (wq3 Int) (awq3_0 Int) (awq3_1 Int) (awq3_2 Int) (t_wq3_0 Int) (t_awq3_0_0 Int) (t_awq3_0_1 Int) (t_awq3_0_2 Int) (block_num_q3 Int) (pay_amount3_q Int) (oracleq3 Int) (t_oracleq3_0 Int) )(let (($x750 (and (or (and (distinct xa_q 0) true) (not (= awq3_0 (+ aw_1_0 w_1)))) (or (and (distinct xa_q 1) true) (not (= awq3_1 (+ aw_1_1 w_1)))) (or (and (distinct xa_q 2) true) (not (= awq3_2 (+ aw_1_2 w_1)))))))
 (let (($x479 (= oracleq2 oracleq3)))
 (let (($x348 (= awq3_2 t_awq3_0_2)))
 (let (($x349 (= awq3_1 t_awq3_0_1)))
 (let (($x350 (= awq3_0 t_awq3_0_0)))
 (let (($x351 (and $x350 $x349 $x348)))
 (let (($x352 (= wq3 t_wq3_0)))
 (let (($x480 (and $x352 $x351 $x479)))
 (let (($x739 (and (ite (= xa_q 0) (= t_awq3_0_0 (+ awq2_0 pay_amount3_q)) (= t_awq3_0_0 awq2_0)) (ite (= xa_q 1) (= t_awq3_0_1 (+ awq2_1 pay_amount3_q)) (= t_awq3_0_1 awq2_1)) (ite (= xa_q 2) (= t_awq3_0_2 (+ awq2_2 pay_amount3_q)) (= t_awq3_0_2 awq2_2)))))
 (let (($x495 (= t_wq3_0 (- wq2 pay_amount3_q))))
 (let (($x503 (and (= wq3 wq2) (and (= awq3_0 awq2_0) (= awq3_1 awq2_1) (= awq3_2 awq2_2)) $x479)))
 (let (($x378 (not (>= pay_amount3_q 0))))
 (let (($x678 (and (and (ite $x378 $x503 (and (and $x495 $x739) true $x480)) true $x480))))
 (let (($x508 (not (<= pay_amount3_q wq2))))
 (let (($x387 (not (= xn_q3 0))))
 (let (($x512 (>= block_num_q3 block_num_q2)))
 (let (($x514 (>= awq2_1 0)))
 (let (($x516 (and (>= awq2_0 0) $x514 (>= awq2_2 0))))
 (let (($x703 (and (and (>= xa_q 0) (<= xa_q 2) (>= xn_q3 0)) $x516 $x512 (ite $x387 $x503 (and (ite $x508 $x503 $x678))))))
 (let (($x664 (= oracleq1 oracleq2)))
 (let (($x521 (= awq2_2 t_awq2_0_2)))
 (let (($x524 (and (= awq2_0 t_awq2_0_0) (= awq2_1 t_awq2_0_1) $x521)))
 (let (($x525 (= wq2 t_wq2_0)))
 (let (($x665 (and $x525 $x524 $x664)))
 (let (($x649 (and (ite (= xa_q 0) (= t_awq2_0_0 (+ awq1_0 pay_amount2_q)) (= t_awq2_0_0 awq1_0)) (ite (= xa_q 1) (= t_awq2_0_1 (+ awq1_1 pay_amount2_q)) (= t_awq2_0_1 awq1_1)) (ite (= xa_q 2) (= t_awq2_0_2 (+ awq1_2 pay_amount2_q)) (= t_awq2_0_2 awq1_2)))))
 (let (($x680 (= t_wq2_0 (- wq1 pay_amount2_q))))
 (let (($x688 (and (= wq2 wq1) (and (= awq2_0 awq1_0) (= awq2_1 awq1_1) (= awq2_2 awq1_2)) $x664)))
 (let (($x551 (not (>= pay_amount2_q 0))))
 (let (($x656 (and (and (ite $x551 $x688 (and (and $x680 $x649) true $x665)) true $x665))))
 (let (($x693 (not (<= pay_amount2_q wq1))))
 (let (($x560 (not (= xn_q2 0))))
 (let (($x697 (>= block_num_q2 block_num_q1)))
 (let (($x699 (>= awq1_1 0)))
 (let (($x701 (and (>= awq1_0 0) $x699 (>= awq1_2 0))))
 (let (($x662 (and (and (>= xa_q 0) (<= xa_q 2) (>= xn_q2 0)) $x701 $x697 (ite $x560 $x688 (and (ite $x693 $x688 $x656))))))
 (let (($x864 (= oracleq0 oracleq1)))
 (let (($x709 (and (= awq1_0 t_awq1_0_0) (= awq1_1 t_awq1_0_1) (= awq1_2 t_awq1_0_2))))
 (let (($x710 (= wq1 t_wq1_0)))
 (let (($x865 (and $x710 $x709 $x864)))
 (let (($x646 (and (ite (= xa_q 0) (= t_awq1_0_0 (+ awq0_0 pay_amount1_q)) (= t_awq1_0_0 awq0_0)) (ite (= xa_q 1) (= t_awq1_0_1 (+ awq0_1 pay_amount1_q)) (= t_awq1_0_1 awq0_1)) (ite (= xa_q 2) (= t_awq1_0_2 (+ awq0_2 pay_amount1_q)) (= t_awq1_0_2 awq0_2)))))
 (let (($x880 (= t_wq1_0 (- wq0 pay_amount1_q))))
 (let (($x888 (and (= wq1 wq0) (and (= awq1_0 awq0_0) (= awq1_1 awq0_1) (= awq1_2 awq0_2)) $x864)))
 (let (($x736 (not (>= pay_amount1_q 0))))
 (let (($x644 (and (and (ite $x736 $x888 (and (and $x880 $x646) true $x865)) true $x865))))
 (let (($x893 (not (<= pay_amount1_q wq0))))
 (let (($x745 (not (= xn_q1 0))))
 (let (($x897 (>= block_num_q1 block_num_q0)))
 (let (($x901 (and (>= awq0_0 0) (>= awq0_1 0) (>= awq0_2 0))))
 (let (($x431 (and (and (>= xa_q 0) (<= xa_q 2) (>= xn_q1 0)) $x901 $x897 (ite $x745 $x888 (and (ite $x893 $x888 $x644))))))
 (let (($x905 (= oracle_1 oracleq0)))
 (let (($x909 (and (= awq0_0 t_awq0_0_0) (= awq0_1 t_awq0_0_1) (= awq0_2 t_awq0_0_2))))
 (let (($x910 (= wq0 t_wq0_0)))
 (let (($x911 (and $x910 $x909 $x905)))
 (let (($x425 (and (ite (= xa_q 0) (= t_awq0_0_0 (+ aw_1_0 pay_amount0_q)) (= t_awq0_0_0 aw_1_0)) (ite (= xa_q 1) (= t_awq0_0_1 (+ aw_1_1 pay_amount0_q)) (= t_awq0_0_1 aw_1_1)) (ite (= xa_q 2) (= t_awq0_0_2 (+ aw_1_2 pay_amount0_q)) (= t_awq0_0_2 aw_1_2)))))
 (let (($x934 (and (= wq0 w_1) (and (= awq0_0 aw_1_0) (= awq0_1 aw_1_1) (= awq0_2 aw_1_2)) $x905)))
 (let (($x935 (>= pay_amount0_q 0)))
 (let (($x936 (not $x935)))
 (let (($x429 (and (ite $x936 $x934 (and (and (= t_wq0_0 (- w_1 pay_amount0_q)) $x425) true $x911)) true $x911)))
 (let (($x945 (not (= xn_q0 0))))
 (let (($x174 (>= aw_1_2 0)))
 (let (($x173 (>= aw_1_1 0)))
 (let (($x172 (>= aw_1_0 0)))
 (let (($x175 (and $x172 $x173 $x174)))
 (let (($x439 (and (and (>= xa_q 0) (<= xa_q 2) (>= xn_q0 0)) $x175 (>= block_num_q0 block_num_1) (ite $x945 $x934 (and (ite (not (<= pay_amount0_q w_1)) $x934 (and $x429)))))))
 (or (not $x439) (not $x431) (not $x662) (not $x703) $x750))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x291 (<= xa_q 2)))
 (let (($x292 (>= xa_q 0)))
 (let (($x293 (and $x292 $x291)))
 (and $x293 true $x442))))))
 ))
 (and $x444)))
(check-sat)
