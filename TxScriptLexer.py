# Generated from TxScript.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2?")
        buf.write("\u01ab\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30")
        buf.write("\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3")
        buf.write("\"\3\"\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3")
        buf.write("&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3)\3)\3)\3)")
        buf.write("\3)\3*\3*\3*\3*\3+\3+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3/\3")
        buf.write("/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3")
        buf.write("\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64")
        buf.write("\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38")
        buf.write("\38\38\38\38\39\39\79\u0168\n9\f9\169\u016b\139\3:\3:")
        buf.write("\7:\u016f\n:\f:\16:\u0172\13:\3;\5;\u0175\n;\3;\3;\5;")
        buf.write("\u0179\n;\3;\3;\6;\u017d\n;\r;\16;\u017e\5;\u0181\n;\3")
        buf.write("<\3<\3<\6<\u0186\n<\r<\16<\u0187\3<\3<\3<\6<\u018d\n<")
        buf.write("\r<\16<\u018e\5<\u0191\n<\3=\3=\3=\3=\3=\3=\3=\3=\3=\3")
        buf.write("=\3=\3=\5=\u019f\n=\3>\6>\u01a2\n>\r>\16>\u01a3\3>\3>")
        buf.write("\3?\3?\3@\3@\2\2A\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65")
        buf.write("i\66k\67m8o9q:s;u<w=y>{?}\2\177\2\3\2\6\4\2aac|\6\2\62")
        buf.write(";C\\aac|\5\2C\\aac|\5\2\13\f\17\17\"\"\2\u01b4\2\3\3\2")
        buf.write("\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2")
        buf.write("\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2")
        buf.write("\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35")
        buf.write("\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2")
        buf.write("\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2")
        buf.write("\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2")
        buf.write("\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2")
        buf.write("\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2")
        buf.write("\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3")
        buf.write("\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_")
        buf.write("\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2")
        buf.write("i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2")
        buf.write("\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2")
        buf.write("\2\3\u0081\3\2\2\2\5\u008a\3\2\2\2\7\u008c\3\2\2\2\t\u009c")
        buf.write("\3\2\2\2\13\u009e\3\2\2\2\r\u00ab\3\2\2\2\17\u00b8\3\2")
        buf.write("\2\2\21\u00bf\3\2\2\2\23\u00c1\3\2\2\2\25\u00c5\3\2\2")
        buf.write("\2\27\u00cb\3\2\2\2\31\u00d0\3\2\2\2\33\u00d2\3\2\2\2")
        buf.write("\35\u00d7\3\2\2\2\37\u00dd\3\2\2\2!\u00e3\3\2\2\2#\u00e5")
        buf.write("\3\2\2\2%\u00e7\3\2\2\2\'\u00e9\3\2\2\2)\u00eb\3\2\2\2")
        buf.write("+\u00ef\3\2\2\2-\u00f1\3\2\2\2/\u00f3\3\2\2\2\61\u00f5")
        buf.write("\3\2\2\2\63\u00f7\3\2\2\2\65\u00f9\3\2\2\2\67\u00fc\3")
        buf.write("\2\2\29\u00ff\3\2\2\2;\u0101\3\2\2\2=\u0103\3\2\2\2?\u0106")
        buf.write("\3\2\2\2A\u0109\3\2\2\2C\u010d\3\2\2\2E\u010f\3\2\2\2")
        buf.write("G\u0112\3\2\2\2I\u0114\3\2\2\2K\u011c\3\2\2\2M\u011f\3")
        buf.write("\2\2\2O\u0126\3\2\2\2Q\u0128\3\2\2\2S\u012f\3\2\2\2U\u0133")
        buf.write("\3\2\2\2W\u0135\3\2\2\2Y\u0138\3\2\2\2[\u013a\3\2\2\2")
        buf.write("]\u013c\3\2\2\2_\u0142\3\2\2\2a\u0144\3\2\2\2c\u0149\3")
        buf.write("\2\2\2e\u014e\3\2\2\2g\u0153\3\2\2\2i\u0156\3\2\2\2k\u0158")
        buf.write("\3\2\2\2m\u015b\3\2\2\2o\u0160\3\2\2\2q\u0165\3\2\2\2")
        buf.write("s\u016c\3\2\2\2u\u0180\3\2\2\2w\u0190\3\2\2\2y\u019e\3")
        buf.write("\2\2\2{\u01a1\3\2\2\2}\u01a7\3\2\2\2\177\u01a9\3\2\2\2")
        buf.write("\u0081\u0082\7e\2\2\u0082\u0083\7q\2\2\u0083\u0084\7p")
        buf.write("\2\2\u0084\u0085\7v\2\2\u0085\u0086\7t\2\2\u0086\u0087")
        buf.write("\7c\2\2\u0087\u0088\7e\2\2\u0088\u0089\7v\2\2\u0089\4")
        buf.write("\3\2\2\2\u008a\u008b\7}\2\2\u008b\6\3\2\2\2\u008c\u008d")
        buf.write("\7t\2\2\u008d\u008e\7g\2\2\u008e\u008f\7u\2\2\u008f\u0090")
        buf.write("\7q\2\2\u0090\u0091\7w\2\2\u0091\u0092\7t\2\2\u0092\u0093")
        buf.write("\7e\2\2\u0093\u0094\7g\2\2\u0094\u0095\7u\2\2\u0095\u0096")
        buf.write("\7a\2\2\u0096\u0097\7d\2\2\u0097\u0098\7q\2\2\u0098\u0099")
        buf.write("\7w\2\2\u0099\u009a\7p\2\2\u009a\u009b\7f\2\2\u009b\b")
        buf.write("\3\2\2\2\u009c\u009d\7<\2\2\u009d\n\3\2\2\2\u009e\u009f")
        buf.write("\7c\2\2\u009f\u00a0\7i\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2")
        buf.write("\7p\2\2\u00a2\u00a3\7v\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5")
        buf.write("\7a\2\2\u00a5\u00a6\7d\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8")
        buf.write("\7w\2\2\u00a8\u00a9\7p\2\2\u00a9\u00aa\7f\2\2\u00aa\f")
        buf.write("\3\2\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae")
        buf.write("\7m\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1")
        buf.write("\7u\2\2\u00b1\u00b2\7a\2\2\u00b2\u00b3\7d\2\2\u00b3\u00b4")
        buf.write("\7q\2\2\u00b4\u00b5\7w\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7")
        buf.write("\7f\2\2\u00b7\16\3\2\2\2\u00b8\u00b9\7i\2\2\u00b9\u00ba")
        buf.write("\7n\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7d\2\2\u00bc\u00bd")
        buf.write("\7c\2\2\u00bd\u00be\7n\2\2\u00be\20\3\2\2\2\u00bf\u00c0")
        buf.write("\7\177\2\2\u00c0\22\3\2\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3")
        buf.write("\7p\2\2\u00c3\u00c4\7v\2\2\u00c4\24\3\2\2\2\u00c5\u00c6")
        buf.write("\7h\2\2\u00c6\u00c7\7n\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9")
        buf.write("\7c\2\2\u00c9\u00ca\7v\2\2\u00ca\26\3\2\2\2\u00cb\u00cc")
        buf.write("\7d\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf")
        buf.write("\7n\2\2\u00cf\30\3\2\2\2\u00d0\u00d1\7?\2\2\u00d1\32\3")
        buf.write("\2\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5")
        buf.write("\7w\2\2\u00d5\u00d6\7g\2\2\u00d6\34\3\2\2\2\u00d7\u00d8")
        buf.write("\7h\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7n\2\2\u00da\u00db")
        buf.write("\7u\2\2\u00db\u00dc\7g\2\2\u00dc\36\3\2\2\2\u00dd\u00de")
        buf.write("\7s\2\2\u00de\u00df\7w\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1")
        buf.write("\7t\2\2\u00e1\u00e2\7{\2\2\u00e2 \3\2\2\2\u00e3\u00e4")
        buf.write("\7%\2\2\u00e4\"\3\2\2\2\u00e5\u00e6\7*\2\2\u00e6$\3\2")
        buf.write("\2\2\u00e7\u00e8\7A\2\2\u00e8&\3\2\2\2\u00e9\u00ea\7+")
        buf.write("\2\2\u00ea(\3\2\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed\7q")
        buf.write("\2\2\u00ed\u00ee\7v\2\2\u00ee*\3\2\2\2\u00ef\u00f0\7#")
        buf.write("\2\2\u00f0,\3\2\2\2\u00f1\u00f2\7,\2\2\u00f2.\3\2\2\2")
        buf.write("\u00f3\u00f4\7\61\2\2\u00f4\60\3\2\2\2\u00f5\u00f6\7-")
        buf.write("\2\2\u00f6\62\3\2\2\2\u00f7\u00f8\7/\2\2\u00f8\64\3\2")
        buf.write("\2\2\u00f9\u00fa\7?\2\2\u00fa\u00fb\7?\2\2\u00fb\66\3")
        buf.write("\2\2\2\u00fc\u00fd\7#\2\2\u00fd\u00fe\7?\2\2\u00fe8\3")
        buf.write("\2\2\2\u00ff\u0100\7>\2\2\u0100:\3\2\2\2\u0101\u0102\7")
        buf.write("@\2\2\u0102<\3\2\2\2\u0103\u0104\7>\2\2\u0104\u0105\7")
        buf.write("?\2\2\u0105>\3\2\2\2\u0106\u0107\7@\2\2\u0107\u0108\7")
        buf.write("?\2\2\u0108@\3\2\2\2\u0109\u010a\7c\2\2\u010a\u010b\7")
        buf.write("p\2\2\u010b\u010c\7f\2\2\u010cB\3\2\2\2\u010d\u010e\7")
        buf.write("(\2\2\u010eD\3\2\2\2\u010f\u0110\7q\2\2\u0110\u0111\7")
        buf.write("t\2\2\u0111F\3\2\2\2\u0112\u0113\7~\2\2\u0113H\3\2\2\2")
        buf.write("\u0114\u0115\7k\2\2\u0115\u0116\7o\2\2\u0116\u0117\7r")
        buf.write("\2\2\u0117\u0118\7n\2\2\u0118\u0119\7k\2\2\u0119\u011a")
        buf.write("\7g\2\2\u011a\u011b\7u\2\2\u011bJ\3\2\2\2\u011c\u011d")
        buf.write("\7/\2\2\u011d\u011e\7@\2\2\u011eL\3\2\2\2\u011f\u0120")
        buf.write("\7G\2\2\u0120\u0121\7z\2\2\u0121\u0122\7k\2\2\u0122\u0123")
        buf.write("\7u\2\2\u0123\u0124\7v\2\2\u0124\u0125\7u\2\2\u0125N\3")
        buf.write("\2\2\2\u0126\u0127\7\60\2\2\u0127P\3\2\2\2\u0128\u0129")
        buf.write("\7H\2\2\u0129\u012a\7q\2\2\u012a\u012b\7t\2\2\u012b\u012c")
        buf.write("\7c\2\2\u012c\u012d\7n\2\2\u012d\u012e\7n\2\2\u012eR\3")
        buf.write("\2\2\2\u012f\u0130\7u\2\2\u0130\u0131\7w\2\2\u0131\u0132")
        buf.write("\7o\2\2\u0132T\3\2\2\2\u0133\u0134\7.\2\2\u0134V\3\2\2")
        buf.write("\2\u0135\u0136\7k\2\2\u0136\u0137\7p\2\2\u0137X\3\2\2")
        buf.write("\2\u0138\u0139\7]\2\2\u0139Z\3\2\2\2\u013a\u013b\7_\2")
        buf.write("\2\u013b\\\3\2\2\2\u013c\u013d\7B\2\2\u013d\u013e\7v\2")
        buf.write("\2\u013e\u013f\7k\2\2\u013f\u0140\7o\2\2\u0140\u0141\7")
        buf.write("g\2\2\u0141^\3\2\2\2\u0142\u0143\7a\2\2\u0143`\3\2\2\2")
        buf.write("\u0144\u0145\7B\2\2\u0145\u0146\7r\2\2\u0146\u0147\7t")
        buf.write("\2\2\u0147\u0148\7g\2\2\u0148b\3\2\2\2\u0149\u014a\7p")
        buf.write("\2\2\u014a\u014b\7w\2\2\u014b\u014c\7n\2\2\u014c\u014d")
        buf.write("\7n\2\2\u014dd\3\2\2\2\u014e\u014f\7u\2\2\u014f\u0150")
        buf.write("\7m\2\2\u0150\u0151\7k\2\2\u0151\u0152\7r\2\2\u0152f\3")
        buf.write("\2\2\2\u0153\u0154\7<\2\2\u0154\u0155\7?\2\2\u0155h\3")
        buf.write("\2\2\2\u0156\u0157\7=\2\2\u0157j\3\2\2\2\u0158\u0159\7")
        buf.write("k\2\2\u0159\u015a\7h\2\2\u015al\3\2\2\2\u015b\u015c\7")
        buf.write("v\2\2\u015c\u015d\7j\2\2\u015d\u015e\7g\2\2\u015e\u015f")
        buf.write("\7p\2\2\u015fn\3\2\2\2\u0160\u0161\7g\2\2\u0161\u0162")
        buf.write("\7n\2\2\u0162\u0163\7u\2\2\u0163\u0164\7g\2\2\u0164p\3")
        buf.write("\2\2\2\u0165\u0169\t\2\2\2\u0166\u0168\t\3\2\2\u0167\u0166")
        buf.write("\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169")
        buf.write("\u016a\3\2\2\2\u016ar\3\2\2\2\u016b\u0169\3\2\2\2\u016c")
        buf.write("\u0170\t\4\2\2\u016d\u016f\t\3\2\2\u016e\u016d\3\2\2\2")
        buf.write("\u016f\u0172\3\2\2\2\u0170\u016e\3\2\2\2\u0170\u0171\3")
        buf.write("\2\2\2\u0171t\3\2\2\2\u0172\u0170\3\2\2\2\u0173\u0175")
        buf.write("\7/\2\2\u0174\u0173\3\2\2\2\u0174\u0175\3\2\2\2\u0175")
        buf.write("\u0176\3\2\2\2\u0176\u0181\5}?\2\u0177\u0179\7/\2\2\u0178")
        buf.write("\u0177\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017a\3\2\2\2")
        buf.write("\u017a\u017c\5\177@\2\u017b\u017d\5}?\2\u017c\u017b\3")
        buf.write("\2\2\2\u017d\u017e\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f")
        buf.write("\3\2\2\2\u017f\u0181\3\2\2\2\u0180\u0174\3\2\2\2\u0180")
        buf.write("\u0178\3\2\2\2\u0181v\3\2\2\2\u0182\u0183\5u;\2\u0183")
        buf.write("\u0185\7\60\2\2\u0184\u0186\5}?\2\u0185\u0184\3\2\2\2")
        buf.write("\u0186\u0187\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3")
        buf.write("\2\2\2\u0188\u0191\3\2\2\2\u0189\u018a\5u;\2\u018a\u018c")
        buf.write("\7\60\2\2\u018b\u018d\5}?\2\u018c\u018b\3\2\2\2\u018d")
        buf.write("\u018e\3\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f\3\2\2\2")
        buf.write("\u018f\u0191\3\2\2\2\u0190\u0182\3\2\2\2\u0190\u0189\3")
        buf.write("\2\2\2\u0191x\3\2\2\2\u0192\u0193\7k\2\2\u0193\u0194\7")
        buf.write("p\2\2\u0194\u019f\7v\2\2\u0195\u0196\7h\2\2\u0196\u0197")
        buf.write("\7n\2\2\u0197\u0198\7q\2\2\u0198\u0199\7c\2\2\u0199\u019f")
        buf.write("\7v\2\2\u019a\u019b\7d\2\2\u019b\u019c\7q\2\2\u019c\u019d")
        buf.write("\7q\2\2\u019d\u019f\7n\2\2\u019e\u0192\3\2\2\2\u019e\u0195")
        buf.write("\3\2\2\2\u019e\u019a\3\2\2\2\u019fz\3\2\2\2\u01a0\u01a2")
        buf.write("\t\5\2\2\u01a1\u01a0\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3")
        buf.write("\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\3\2\2\2")
        buf.write("\u01a5\u01a6\b>\2\2\u01a6|\3\2\2\2\u01a7\u01a8\4\62;\2")
        buf.write("\u01a8~\3\2\2\2\u01a9\u01aa\4\63;\2\u01aa\u0080\3\2\2")
        buf.write("\2\16\2\u0169\u0170\u0174\u0178\u017e\u0180\u0187\u018e")
        buf.write("\u0190\u019e\u01a3\3\2\3\2")
        return buf.getvalue()


class TxScriptLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    LABEL = 56
    LABELUPPER = 57
    NUMBER = 58
    REAL = 59
    TYPE = 60
    WS = 61

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'contract'", "'{'", "'resources_bound'", "':'", "'agents_bound'", 
            "'tokens_bound'", "'global'", "'}'", "'int'", "'float'", "'bool'", 
            "'='", "'true'", "'false'", "'query'", "'#'", "'('", "'?'", 
            "')'", "'not'", "'!'", "'*'", "'/'", "'+'", "'-'", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'and'", "'&'", "'or'", "'|'", 
            "'implies'", "'->'", "'Exists'", "'.'", "'Forall'", "'sum'", 
            "','", "'in'", "'['", "']'", "'@time'", "'_'", "'@pre'", "'null'", 
            "'skip'", "':='", "';'", "'if'", "'then'", "'else'" ]

    symbolicNames = [ "<INVALID>",
            "LABEL", "LABELUPPER", "NUMBER", "REAL", "TYPE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "LABEL", 
                  "LABELUPPER", "NUMBER", "REAL", "TYPE", "WS", "DIGIT", 
                  "DIGIT_NOT_ZERO" ]

    grammarFileName = "TxScript.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


